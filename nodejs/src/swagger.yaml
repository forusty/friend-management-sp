swagger: "2.0"
info:
  description: "Friend Management Server"
  version: "1.0.0"
  title: "Friend Management API Docs"
  contact:
    email: "youjun89@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "management"
  description: "management of friend connection"
schemes:
- "http"
paths:
  /addConnection:
    post:
      tags:
      - "management"
      summary: "Add connections between 2 email address"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        description: "Object that contains 2 email address to create connection for"
        schema:
          $ref: "#/definitions/Connection"
      responses:
        200:
          description: "Codes\n0 - No error\n5 - Blocked contacts cannot be added"
          schema:
              $ref: "#/definitions/ConnectionResponse"
        400:
          description: "Codes\n1 - Generic Error Code\n2 - Database Connection Issues\n4 - Missing Key or Empty Value"
        500:
          description: "-1 - Unknown Error"
  /getFriendList:
    post:
      tags:
      - "management"
      summary: "Retrieve friends list for an email address"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Get friendlist of a given email address"
        required: true
        schema:
          $ref: "#/definitions/GetFriend"
      responses:
        200:
          description: "Codes\n0 - No error"
          schema:
            $ref: "#/definitions/GetFriendResponse"
        400:
          description: "Codes\n1 - Generic Error Code\n2 - Neo4J DB not up (ServiceUnavailable)\n4 - Missing Key or Empty Value"
        500:
          description: "-1 - Unknown Error"
  /getCommonFriendList:
    post:
      tags:
      - "management"
      summary: "Common friends list between 2 email address"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Get friendlist of a given email address"
        required: true
        schema:
          $ref: "#/definitions/GetCommonFriend"
      responses:
        200:
          description: "Codes\n0 - No error"
          schema:
            $ref: "#/definitions/GetFriendResponse"
        400:
          description: "Codes\n1 - Generic Error Code\n2 - Database Connection Issues\n3 - Email address provided is 1 or less\n4 - Missing Key or Empty Value"
        500:
          description: "-1 - Unknown Error"
  /addSubscription:
    post:
      tags:
      - "management"
      summary: "Add a subscription for 2 email addresses"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Object that add a subscription from requestor email address to target email address"
        required: true
        schema:
          $ref: "#/definitions/Subscription"
      responses:
        200:
          description: "Codes -Description\n0 - No error"
          schema:
            $ref: "#/definitions/SubscriptionResponse"
        400:
          description: "Codes\n1 - Generic Error Code\n2 - Database Connection Issues\n4 - Missing Key or Empty Value"
        500:
          description: "-1 - Unknown Error"
  /blockConnection:
    post:
      tags:
      - "management"
      summary: "Block connections between 2 email address"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        description: "Object that blocks target email address from requestor"
        schema:
          $ref: "#/definitions/Block"
      responses:
        200:
          description: "Codes\n0 - No error"
          schema:
              $ref: "#/definitions/BlockResponse"
        400:
          description: "Codes\n1 - Generic Error Code\n2 - Database Connection Issues\n4 - Missing Key or Empty Value"
        500:
          description: "-1 - Unknown Error"
definitions:
  Connection:
    type: "object"
    properties:
      email:
        minItems: 2
        uniqueItems: true
        type: "array"
        items:
          type: "string"
  GetFriend:
    type: "object"
    properties:
      email:
        type: "string"       
  GetCommonFriend:
    type: "object"
    properties:
      friends:
        type: "array"          
        minItems: 2
        uniqueItems: true
        items:
          type: "string"       
  Subscription:
    type: "object"
    properties:
      requestor:
        type: "string"
      target:
        type: "string"      
  Block:
    type: "object"
    properties:
      requestor:
        type: "string"
      target:
        type: "string"
  ConnectionResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
      code:
        type: "integer"
        format: "int32"
      connectionMade:
        type: "array"
        items:
          type: "string"
      connectionExist:
        type: "array"
        items:
          type: "string"
  BlockResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
      code:
        type: "integer"
        format: "int32"
      blocksMade:
        type: "array"
        items:
          type: "string"
      blocksExist:
        type: "array"
        items:
          type: "string"
  SubscriptionResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
      code:
        type: "integer"
        format: "int32"
      subscriptionMade:
        type: "array"
        items:
          type: "string"
      subscriptionExist:
        type: "array"
        items:
          type: "string"
  GetFriendResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
      code:
        type: "integer"
        format: "int32"
        enum:
        - 0
        - 1
        - 2
      count:
        type: "integer"
        format: "int32"
      friends:
        type: "array"
        items:
          type: "string"