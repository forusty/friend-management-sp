swagger: "2.0"
info:
  description: "Friend Management Server"
  version: "1.0.0"
  title: "Friend Management API Docs"
  contact:
    email: "youjun89@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "management"
  description: "management of friend connection"
schemes:
- "http"
paths:
  /addConnection:
    post:
      tags:
      - "management"
      summary: "Add connections between 2 email address"
      description: ""
      operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Connection"
      responses:
        200:
          description: "Codes -Description\n0 - No error\n1 - Generic Error Code\n2 - Neo4J DB not up (ServiceUnavailable)\n3 - Less than 2 email address given\n4 - Missing Key or Empty Value\n5 - Connections cannot be made between blocked contacts"
          schema:
            $ref: "#/definitions/ConnectionResponse"
        405:
          description: "Invalid input"
  /getFriendList:
    post:
      tags:
      - "management"
      summary: "Retrieve friends list for an email address"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Get friendlist of a given email address"
        required: true
        type: "object"
        schema:
          $ref: "#/definitions/GetFriend"
      responses:
        200:
          description: "Codes -Description\n0 - No error\n1 - Generic Error Code\n2 - Neo4J DB not up (ServiceUnavailable)\n3 - Less than 2 email address given\n4 - No email given"
          schema:
            $ref: "#/definitions/GetFriendResponse"
        400:
          description: "Invalid status value"
  /getCommonFriendList:
    post:
      tags:
      - "management"
      summary: "Common friends list between two email addresses"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Get friendlist of a given email address"
        required: true
        type: "object"
        schema:
          $ref: "#/definitions/GetCommonFriend"
      responses:
        200:
          description: "Codes -Description\n0 - No error\n1 - Generic Error Code\n2 - Neo4J DB not up (ServiceUnavailable)\n3 - Less than 2 email address given\n4 - No email given"
          schema:
            $ref: "#/definitions/GetFriendResponse"
        400:
          description: "Invalid tag value"
definitions:
  Connection:
    type: "object"
    properties:
      email:
        type: "array"
        minItems: 2
        uniqueItems: true
        required: true
        items:
          type: "string"
  GetFriend:
    type: "object"
    properties:
      email:
        type: "string"          
        allowEmptyValue: false 
  GetCommonFriend:
    type: "object"
    properties:
      friends:
        type: "array"          
        minItems: 2
        uniqueItems: true
        required: true
        items:
          type: "string"
  ConnectionResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
      code:
        type: "integer"
        format: "int32"
        enum:
        - 0
        - 1
        - 2
      connectionExist:
        type: "array"
        items:
          type: "string"
  GetFriendResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
      code:
        type: "integer"
        format: "int32"
        enum:
        - 0
        - 1
        - 2
      count:
        type: "integer"
        format: "int32"
      friends:
        type: "array"
        items:
          type: "string"
  StandardResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
      code:
        type: "integer"
        format: "int32"
        enum:
        - 0
        - 1
        - 2
      connectionExist:
        type: "array"
        items:
          type: "string"